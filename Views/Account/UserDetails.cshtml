@model IEnumerable< IEnumerable< TimeModel > >
@{
    ViewData["Title"] = "Details";
}

<div class="container">
    <canvas class="testChart" width="400" height="200"></canvas>
</div>

@section Scripts {
    <script type="text/javascript">
        let context = document.querySelector('.testChart').getContext('2d');
        var myChart = new Chart(context, {
            type: 'bar',
            data: {
                labels: @Html.Raw( Json.Serialize ( Model.ElementAt(0).Select( x => x.DateTime.DayOfWeek.ToString() ).ToList() ) ),
                datasets: [
                    @foreach (var dataset in Model)
                    {
                        Random random = new Random();
                        var r = random.Next(0, 255);
                        var g = random.Next(0, 255);
                        var b = random.Next(0, 255);
                        @:{
                            @:label: '@dataset.ElementAt(0).TaskName',
                            @:data: @Html.Raw( Json.Serialize( dataset.Select( x => x.Minutes).ToList() ) ),
                            @:backgroundColor: 'rgba(@r, @g, @b, 1)',
                            @:borderColor: 'rgba(@r, @g, @b, 1)',
                            @:borderWidth: 1
                        @:},
                    }
                ]
            },
            options: {
                scales: {
                    yAxes: [{
                        stacked: true,
                        ticks: {
                            beginAtZero: true
                        }
                    }],
                    xAxes: [{
                        stacked: true
                    }]
                }
            }
        });
    </script>
}